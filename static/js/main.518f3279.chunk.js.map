{"version":3,"sources":["components/layout/SideMenu.module.css","pages/Calendar.module.css","components/landing/Header.module.css","pages/Landing.module.css","pages/EmailConfirmation.module.css","components/list/ListForm.module.css","components/layout/Content.module.css","components/layout/Navbar.module.css","pages/List.module.css","services/auth.service.ts","components/auth/VerifyEmail.tsx","pages/EmailConfirmation.tsx","middlewares/WithAuth.tsx","components/layout/Content.tsx","components/layout/Navbar.tsx","components/layout/SideMenu.tsx","components/layout/Header.tsx","helpers/intex.ts","components/list/ListForm.tsx","services/auth-header.ts","services/list.service.ts","pages/List.tsx","hooks/useWindowDimensions.tsx","pages/Calendar.tsx","pages/Home.tsx","components/landing/Header.tsx","components/auth/LoginForm.tsx","components/auth/RegistrationForm.tsx","pages/Landing.tsx","routes/index.tsx","App.tsx","index.tsx","components/auth/AuthForm.module.css","components/layout/Header.module.css"],"names":["module","exports","API_URL","AuthService","email","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","code","id","userId","secretCode","user","getItem","parse","this","getCurrentUser","verified","VerifyEmail","useParams","useState","loading","setLoading","setVerified","useEffect","a","verifyEmail","indicator","LoadingOutlined","style","fontSize","spin","icon","SmileOutlined","title","extra","type","to","status","subTitle","EmailConfirmation","className","styles","confirmationContainer","MailOutlined","onClick","logout","WithAuth","children","content","Content","NavBar","links","navbar","map","item","i","link","SideMenu","visible","onLogout","onClose","brand","closable","placement","width","sideNav","logOut","ExportOutlined","length","CalendarOutlined","OrderedListOutlined","Header","isMenuVisible","setMenuVisible","homeHeader","sideMenuButton","MenuOutlined","size","color","validationMessages","types","CalendarEvent","_title","_start","_endDate","_allDay","_desc","_resourceId","allDay","start","end","desc","resourceId","tooltip","createCalendar","members","result","sort","b","currentMonth","Date","getMonth","currentYear","getFullYear","daysInMonth","getDate","currentIndex","day","getDay","push","lastName","firstName","ListForm","initialData","onSubmit","Form","useForm","form","setFieldsValue","name","listForm","onFinish","autoComplete","validateMessages","initialValues","gutter","flex","Item","rules","required","message","max","placeholder","htmlType","SaveOutlined","List","validator","_","notification","error","Promise","reject","Error","fields","add","remove","field","display","marginBottom","xs","sm","lg","fieldKey","MinusCircleOutlined","deleteMember","key","block","PlusOutlined","disabled","getFieldValue","authHeader","getList","get","headers","createList","list","editList","patch","history","useHistory","setList","listLoading","setListLoading","newList","forEach","success","spinner","getWindowDimensions","window","innerWidth","height","innerHeight","moment","updateLocale","week","dow","doy","localization","date","time","event","noEventsInRange","localizer","momentLocalizer","Calendar","events","setEvents","setTitle","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","res","calendarContainer","—ÅalendarBox","calendarLoading","step","defaultView","defaultDate","messages","Home","path","headerContainer","LoginForm","setError","login","loginError","showIcon","loginForm","prefix","Password","LockOutlined","submitContainer","loginFormButton","RegistrationForm","register","min","hasFeedback","dependencies","value","resolve","TabPane","Tabs","Landing","landingContainer","landingMain","defaultActiveKey","authTabs","tab","index","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.518f3279.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"brand\":\"SideMenu_brand__9JAWb\",\"sideNav\":\"SideMenu_sideNav__2WG4n\",\"logOut\":\"SideMenu_logOut__365WO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarContainer\":\"Calendar_calendarContainer__3smr4\",\"rbc-toolbar\":\"Calendar_rbc-toolbar__3KGqb\",\"rbc-agenda-empty\":\"Calendar_rbc-agenda-empty__1puS4\",\"—ÅalendarBox\":\"Calendar_—ÅalendarBox__3bbn4\",\"calendarLoading\":\"Calendar_calendarLoading__2Dkm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__1lwbu\",\"brand\":\"Header_brand__ixV_7\",\"desc\":\"Header_desc__2qg2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landingContainer\":\"Landing_landingContainer__13owe\",\"landingMain\":\"Landing_landingMain__pRibr\",\"authTabs\":\"Landing_authTabs__2yfCY\",\"calendarImage\":\"Landing_calendarImage__1yiKv\",\"imageContainer\":\"Landing_imageContainer__1WGSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmationContainer\":\"EmailConfirmation_confirmationContainer__f0Um7\",\"icon\":\"EmailConfirmation_icon__1nqDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listForm\":\"ListForm_listForm__am2-Z\",\"deleteMember\":\"ListForm_deleteMember__3UfRC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__14f1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2Nbih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"List_spinner__1XLe0\"};","import axios, { AxiosError } from \"axios\";\r\n\r\nconst API_URL = `https://duty-calendar-api.herokuapp.com/auth/`;\r\n\r\nclass AuthService {\r\n    static login(email: string, password: string) {\r\n        return axios\r\n            .post(API_URL + \"login\", {\r\n                email,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    static logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    static register(email: string, password: string) {\r\n        return axios.post(API_URL + \"register\", {\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    static verifyEmail(code: string, id: string) {\r\n        return axios.post(API_URL + \"verify\", {\r\n            userId: id,\r\n            secretCode: code\r\n        });\r\n    }\r\n\r\n    static getCurrentUser() {\r\n        let user = localStorage.getItem(\"user\");\r\n\r\n        if (user) {\r\n            return JSON.parse(user);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static setVerified() {\r\n        let user = this.getCurrentUser();\r\n        user.verified = true;\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n    }\r\n}\r\n\r\nexport default AuthService;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Result, Button, Spin } from 'antd';\r\nimport { LoadingOutlined, SmileOutlined } from '@ant-design/icons';\r\nimport AuthService from '../../services/auth.service';\r\n\r\ntype VerificationData = {\r\n    code: string;\r\n    id: string;\r\n}\r\n\r\nconst VerifyEmail = () => {\r\n    const { code, id } = useParams<VerificationData>();\r\n    const [loading, setLoading] = useState(true);\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                await AuthService.verifyEmail(code, id);\r\n                AuthService.setVerified();\r\n                setVerified(true);\r\n                setLoading(false);\r\n            } catch {\r\n                setVerified(false);\r\n                setLoading(false);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ?\r\n                    <Spin indicator={<LoadingOutlined style={{ fontSize: 35 }} spin />} /> : (\r\n                        verified ?\r\n                            <Result\r\n                                icon={<SmileOutlined />}\r\n                                title=\"Email —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ\"\r\n                                extra={\r\n                                    <Button type=\"default\">\r\n                                        <Link to=\"/\">\r\n                                            –ù–∞ –≥–æ–ª–æ–≤–Ω—É\r\n                                        </Link>\r\n                                    </Button>\r\n                                }\r\n                            /> :\r\n                            <Result\r\n                                status=\"error\"\r\n                                title=\"–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ email\"\r\n                                subTitle=\"–°–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –∑–Ω–æ–≤—É –∞–±–æ —Å—Ç–≤–æ—Ä—ñ–Ω—å –Ω–æ–≤–∏–π –∞–∫–∞—É–Ω—Ç\"\r\n                                extra={[\r\n                                    <Button type=\"default\" key=\"console\">\r\n                                        <Link to=\"/\">\r\n                                            –£–≤—ñ–π—Ç–∏\r\n                                        </Link>\r\n                                    </Button>\r\n                                ]}\r\n                            />)\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VerifyEmail;","import React from 'react';\r\nimport { MailOutlined, ExportOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport styles from './EmailConfirmation.module.css';\r\nimport AuthService from '../services/auth.service';\r\n\r\n\r\ntype EmailConfirmationProps = {\r\n    email: string;\r\n}\r\n\r\nconst EmailConfirmation = ({ email }: EmailConfirmationProps) => {\r\n    return (\r\n        <div className={styles.confirmationContainer}>\r\n            <div className={styles.icon}>\r\n                <MailOutlined />\r\n            </div>\r\n            <span>\r\n                {`–ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É –±—É–ª–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ ${email}`}\r\n            </span>\r\n            <Button\r\n                type=\"default\"\r\n                onClick={() => AuthService.logout()}\r\n            >\r\n                –í–∏–π—Ç–∏\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailConfirmation;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport EmailConfirmation from '../pages/EmailConfirmation';\r\nimport AuthService from '../services/auth.service';\r\n\r\ntype AuthProps = {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst WithAuth = ({ children }: AuthProps) => {\r\n   const user = AuthService.getCurrentUser();\r\n\r\n    let content = null;\r\n\r\n    if (user && user.verified) {\r\n        content = children;\r\n    } else if (user) {\r\n        content = <EmailConfirmation email={user.email} />\r\n    } else {\r\n        content = <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                content\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WithAuth;","import React from 'react';\r\nimport styles from './Content.module.css';\r\n\r\ntype ContentProps = {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst Content = ({ children }: ContentProps) => {\r\n    return (\r\n        <main className={styles.content}>\r\n            {children}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Content;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Navbar.module.css';\r\n\r\ntype NavBarProps = {\r\n    links: {\r\n        title: string;\r\n        link: string;\r\n        icon: React.ReactNode;\r\n    }[];\r\n}\r\n\r\nconst NavBar = ({ links }: NavBarProps) => {\r\n    return (\r\n        <nav className={styles.navbar}>\r\n            <ul>\r\n                {\r\n                    links.map((item, i) => (\r\n                        <li key={i}>\r\n                            {item.icon}\r\n                            <Link to={item.link}>\r\n                                {item.title}\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Drawer } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './SideMenu.module.css';\r\nimport { ExportOutlined } from '@ant-design/icons';\r\n\r\ntype SideMenuProps = {\r\n    visible: boolean;\r\n    email: string;\r\n    onLogout: () => void;\r\n    onClose: () => void;\r\n    links: {\r\n        title: string;\r\n        link: string;\r\n        icon: React.ReactNode;\r\n    }[];\r\n};\r\n\r\nconst SideMenu = ({ visible, email, onLogout, onClose, links }: SideMenuProps) => {\r\n    return (\r\n        <Drawer\r\n            title={\r\n                <span className={styles.brand}>\r\n                    DutyCalendar\r\n                </span>\r\n            }\r\n            visible={visible}\r\n            onClose={onClose}\r\n            closable={true}\r\n            placement=\"left\"\r\n            width='300'\r\n        >\r\n            <ul className={styles.sideNav}>\r\n                {\r\n                    links.map((item, i) => (\r\n                        <li key={i}>\r\n                            {item.icon}\r\n                            <Link to={item.link} onClick={onClose}>\r\n                                {item.title}\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n                <li className={styles.logOut} key={links.length}>\r\n                    <div>\r\n                        {email}\r\n                    </div>\r\n                    <span onClick={onLogout}>\r\n                        <ExportOutlined />\r\n                        –í–∏–π—Ç–∏\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default SideMenu;","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { CalendarOutlined, OrderedListOutlined, ExportOutlined, MenuOutlined } from '@ant-design/icons';\r\nimport styles from './Header.module.css';\r\nimport NavBar from './Navbar';\r\nimport SideMenu from './SideMenu';\r\n\r\ntype HeaderProps = {\r\n    email: string;\r\n    onLogout: () => void;\r\n};\r\n\r\nconst links = [\r\n    {\r\n        link: '/home/calendar',\r\n        title: '–ö–∞–ª–µ–Ω–¥–∞—Ä',\r\n        icon: <CalendarOutlined />\r\n    },\r\n    {\r\n        link: '/home/list',\r\n        title: '–°–ø–∏—Å–æ–∫',\r\n        icon: <OrderedListOutlined />\r\n    },\r\n];\r\n\r\nconst Header = ({ email, onLogout }: HeaderProps) => {\r\n    const [isMenuVisible, setMenuVisible] = useState(false);\r\n\r\n    const onMenuOpen = () => {\r\n        setMenuVisible(true);\r\n    };\r\n\r\n    const onMenuClose = () => {\r\n        setMenuVisible(false);\r\n    }\r\n\r\n    return (\r\n        <header className={styles.homeHeader}>\r\n            <Button\r\n                className={styles.sideMenuButton}\r\n                icon={<MenuOutlined />}\r\n                size='large'\r\n                onClick={onMenuOpen}\r\n                type=\"link\"\r\n                color=\"black\"\r\n            />\r\n            <span className={styles.brand}>\r\n                DutyCalendar\r\n            </span>\r\n            <NavBar links={links} />\r\n            <span className={styles.user}>\r\n                {email}\r\n                <Button\r\n                    size='middle'\r\n                    type=\"default\"\r\n                    icon={<ExportOutlined />}\r\n                    onClick={onLogout}\r\n                />\r\n            </span>\r\n            <SideMenu\r\n                visible={isMenuVisible}\r\n                onClose={onMenuClose}\r\n                email={email}\r\n                links={links}\r\n                onLogout={onLogout}\r\n            />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import { ListMember } from \"../interfaces\";\r\n\r\nexport const validationMessages = {\r\n    types: {\r\n        email: '–í–≤–µ–¥—ñ—Ç—å –≤–∞–ª—ñ–¥–Ω–∏–π email',\r\n    }\r\n};\r\n\r\nexport default class CalendarEvent {\r\n    title: string;\r\n    allDay: boolean;\r\n    start: Date;\r\n    end: Date;\r\n    desc: string;\r\n    resourceId?: string;\r\n    tooltip?: string;\r\n\r\n    constructor(_title: string, _start: Date, _endDate: Date, _allDay?: boolean, _desc?: string, _resourceId?: string) {\r\n        this.title = _title;\r\n        this.allDay = _allDay || false;\r\n        this.start = _start;\r\n        this.end = _endDate;\r\n        this.desc = _desc || '';\r\n        this.resourceId = _resourceId;\r\n    }\r\n};\r\n\r\nexport const createCalendar = (members: ListMember[]): CalendarEvent[] => {\r\n    let result: CalendarEvent[] = [];\r\n\r\n    members.sort((a, b) => (a.id as number) - (b.id as number));\r\n    let currentMonth = new Date().getMonth();\r\n    let currentYear = new Date().getFullYear();\r\n    let daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\r\n\r\n    let currentIndex = 0;\r\n\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n        let day = new Date(currentYear, currentMonth, i);\r\n        if (day.getDay() !== 6 && day.getDay() !== 0) {\r\n            if (currentIndex === members.length) {\r\n                currentIndex = 0;\r\n            }\r\n\r\n            result.push(new CalendarEvent(`${members[currentIndex].lastName} ${members[currentIndex].firstName[0]}.`, day, day, true));\r\n            currentIndex++;\r\n\r\n            if (currentIndex === members.length) {\r\n                currentIndex = 0;\r\n            }\r\n\r\n            result.push(new CalendarEvent(`${members[currentIndex].lastName} ${members[currentIndex].firstName[0]}.`, day, day, true));\r\n            currentIndex++;\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { Form, Input, Button, Space, Row, Col, Divider, notification } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport styles from './ListForm.module.css';\r\nimport { List } from '../../interfaces';\r\nimport { validationMessages } from '../../helpers/intex';\r\n\r\nconst MAX_MEMBERS = 100;\r\n\r\ntype ListFormProps = {\r\n    loading: boolean;\r\n    initialData: List | null;\r\n    onSubmit: (list: List) => void;\r\n}\r\n\r\nconst ListForm = ({ initialData, onSubmit, loading }: ListFormProps) => {\r\n    const [form] = Form.useForm();\r\n\r\n    useEffect(() => {\r\n        if (initialData) {\r\n            form.setFieldsValue({\r\n                name: initialData.name,\r\n                members: initialData.members\r\n            });\r\n        }\r\n    }, [initialData]);\r\n\r\n    return (\r\n        <div className={styles.listForm}>\r\n            <Form\r\n                name=\"list\"\r\n                form={form}\r\n                onFinish={onSubmit}\r\n                autoComplete=\"off\"\r\n                validateMessages={validationMessages}\r\n                initialValues={\r\n                    initialData ?\r\n                        {\r\n                            name: initialData.name,\r\n                            members: initialData.members\r\n                        } :\r\n                        {\r\n                            name: '–ù–æ–≤–∏–π –°–ø–∏—Å–æ–∫'\r\n                        }\r\n                }\r\n            >\r\n                <Row gutter={5}>\r\n                    <Col flex=\"auto\">\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É'\r\n                                },\r\n                                {\r\n                                    max: 99,\r\n                                    message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ 100 —Å–∏–º–≤–æ–ª—ñ–≤'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input size='large' placeholder=\"–ù–∞–∑–≤–∞\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Item>\r\n                            <Button\r\n                                size=\"large\"\r\n                                type=\"default\"\r\n                                htmlType=\"submit\"\r\n                                icon={<SaveOutlined />}\r\n                                loading={loading}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Divider />\r\n\r\n                <Form.List\r\n                    name=\"members\"\r\n                    rules={[\r\n                        {\r\n                            validator: async (_, members) => {\r\n                                if (!members || members.length < 1) {\r\n                                    notification.error({\r\n                                        message: \"–î–æ–¥–∞–π—Ç–µ —è–∫ –º—ñ–Ω—ñ–º—É–º –æ–¥–Ω–æ–≥–æ —á–µ—Ä–≥–æ–≤–æ–≥–æ\"\r\n                                    });\r\n                                    return Promise.reject(new Error('–î–æ–¥–∞–π—Ç–µ —è–∫ –º—ñ–Ω—ñ–º—É–º –æ–¥–Ω–æ–≥–æ —á–µ—Ä–≥–æ–≤–æ–≥–æ'));\r\n                                } else if (members.length > MAX_MEMBERS) {\r\n                                    notification.error({\r\n                                        message: \"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —á–µ—Ä–≥–æ–≤–∏—Ö - 100\"\r\n                                    });\r\n                                }\r\n                            },\r\n                        },\r\n                    ]}\r\n                >\r\n                    {(fields, { add, remove }) => (\r\n                        <>\r\n                            {fields.map(field => (\r\n                                <Row key={field.key} style={{ display: 'flex', marginBottom: 8 }} gutter={5} >\r\n                                    <Col xs={12} sm={12} lg={7}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            name={[field.name, 'lastName']}\r\n                                            fieldKey={[field.fieldKey, 'lastName']}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: '–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ'\r\n                                                },\r\n                                                {\r\n                                                    max: 99,\r\n                                                    message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ 100 —Å–∏–º–≤–æ–ª—ñ–≤'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input placeholder=\"–ü—Ä—ñ–∑–≤–∏—â–µ\" />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={12} sm={12} lg={7}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            name={[field.name, 'firstName']}\r\n                                            fieldKey={[field.fieldKey, 'firstName']}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: '–í–≤–µ–¥—ñ—Ç—å —ñ–º\\'—è'\r\n                                                },\r\n                                                {\r\n                                                    max: 99,\r\n                                                    message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ 100 —Å–∏–º–≤–æ–ª—ñ–≤'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input placeholder=\"–Ü–º'—è\" />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={23} sm={23} lg={9}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            name={[field.name, 'email']}\r\n                                            fieldKey={[field.fieldKey, 'email']}\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input placeholder=\"Email\" />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={1} sm={1} lg={1}>\r\n                                        <MinusCircleOutlined className={styles.deleteMember} onClick={() => remove(field.name)} />\r\n                                    </Col>\r\n                                </Row>\r\n                            ))}\r\n                            <Form.Item>\r\n                                <Button\r\n                                    type=\"dashed\"\r\n                                    onClick={() => add()}\r\n                                    block\r\n                                    icon={<PlusOutlined />}\r\n                                    disabled={form.getFieldValue(\"members\") && form.getFieldValue(\"members\").length > MAX_MEMBERS}\r\n                                >\r\n                                    –î–æ–¥–∞—Ç–∏ —á–µ—Ä–≥–æ–≤–æ–≥–æ\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n            </Form>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default ListForm;","export const authHeader = () => {\r\n    let user = localStorage.getItem(\"user\");\r\n\r\n    if (user && JSON.parse(user).accessToken) {\r\n        return { \r\n            \"auth\": JSON.parse(user).accessToken,\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        };\r\n    } else {\r\n        return {};\r\n    }\r\n}","import axios from \"axios\";\r\nimport { authHeader } from \"./auth-header\";\r\nimport { List } from '../interfaces';\r\n\r\nconst API_URL = `https://duty-calendar-api.herokuapp.com/members-list/`;\r\n\r\nexport const getList = async () => {\r\n    return await axios.get(API_URL, { headers: authHeader() })\r\n};\r\n\r\nexport const createList = async (list: List) => {\r\n    return await axios.post(API_URL,\r\n        list,\r\n        {\r\n            headers: authHeader()\r\n        });\r\n};\r\n\r\nexport const editList = async (list: List) => {\r\n    return await axios.patch(API_URL,\r\n        list,\r\n        {\r\n            headers: authHeader()\r\n        });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport ListForm from '../components/list/ListForm';\r\nimport { List as IList, ListMember } from '../interfaces';\r\nimport { Spin, notification } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { createList, editList, getList } from '../services/list.service';\r\nimport styles from './List.module.css';\r\nimport AuthService from '../services/auth.service';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst List = () => {\r\n    let history = useHistory();\r\n    const [list, setList] = useState<IList | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [listLoading, setListLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            try {\r\n                const list = await getList();\r\n                list.data.members.sort((a: ListMember, b: ListMember) => (a.id as number) - (b.id as number));\r\n                setList(list.data as IList);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                if (err.response.status === 401) {\r\n                    AuthService.logout();\r\n                    history.push('/');\r\n                }\r\n                setLoading(false);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    const onSubmit = async (newList: IList) => {\r\n        newList.members.forEach((item, i) => {\r\n            if (!item.email) {\r\n                delete newList.members[i].email;\r\n            }\r\n        });\r\n\r\n        setListLoading(true);\r\n\r\n        try {\r\n            !list ? await createList(newList) : await editList(newList);\r\n            setList(newList);\r\n            setListLoading(false);\r\n            notification.success({\r\n                message: '–ó–º—ñ–Ω–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ'\r\n            });\r\n        } catch (err) {\r\n            if (err.response.status === 401) {\r\n                AuthService.logout();\r\n                history.push('/');\r\n            }\r\n\r\n            setListLoading(false);\r\n            notification.error({\r\n                message: '–ü—ñ–¥ —á–∞—Å –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ :('\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ?\r\n                    <div className={styles.spinner}>\r\n                        <Spin indicator={<LoadingOutlined style={{ fontSize: 30 }} spin />} />\r\n                    </div> :\r\n                    <>\r\n                        <h1>–°–ø–∏—Å–æ–∫ —á–µ—Ä–≥–æ–≤–∏—Ö</h1>\r\n                        <ListForm initialData={list} onSubmit={onSubmit} loading={listLoading} />\r\n                    </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { ListMember } from '../interfaces';\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { getList } from '../services/list.service';\r\nimport { Calendar as BigCalendar, momentLocalizer, Messages } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/uk';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport styles from './Calendar.module.css';\r\nimport useWindowDimensions from '../hooks/useWindowDimensions';\r\nimport CalendarEvent, { createCalendar } from '../helpers/intex';\r\nimport AuthService from '../services/auth.service';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nmoment.updateLocale(\"uk\", {\r\n    week: {\r\n        dow: 1,\r\n        doy: 1\r\n    }\r\n});\r\n\r\nconst localization: Messages = {\r\n    date: '–î–∞—Ç–∞',\r\n    allDay: '–£–≤–µ—Å—å –¥–µ–Ω—å',\r\n    time: '–ß–∞—Å',\r\n    event: '–ß–µ—Ä–≥–æ–≤—ñ',\r\n    noEventsInRange: '–î–æ–¥–∞–π—Ç–µ —á–µ—Ä–≥–æ–≤–∏—Ö'\r\n};\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Calendar = () => {\r\n    let history = useHistory();\r\n    const [events, setEvents] = useState<CalendarEvent[] | null>(null);\r\n    const [title, setTitle] = useState('–ö–∞–ª–µ–Ω–¥–∞—Ä —á–µ—Ä–≥—É–≤–∞–Ω–Ω—è');\r\n    const [loading, setLoading] = useState(false);\r\n    const { width } = useWindowDimensions();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            try {\r\n                const res = await getList();\r\n                let events = createCalendar((res.data.members as ListMember[]));\r\n                setTitle(res.data.name);\r\n                setEvents(events);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                if (err.response.status === 401) {\r\n                    AuthService.logout();\r\n                    history.push('/');\r\n                }\r\n\r\n                setLoading(false);\r\n            }\r\n        })();\r\n    }, [width]);\r\n\r\n    return (\r\n        <div className={styles.calendarContainer}>\r\n            <h1>\r\n                {\r\n                    loading ?\r\n                        <Spin indicator={<LoadingOutlined style={{ fontSize: 25 }} spin />} /> :\r\n                        title\r\n                }\r\n            </h1>\r\n            <div className={styles.—ÅalendarBox}>\r\n                {\r\n                    loading ?\r\n                        <div className={styles.calendarLoading}>\r\n                            <Spin indicator={<LoadingOutlined style={{ fontSize: 50 }} spin />} />\r\n                        </div> :\r\n                        <BigCalendar\r\n                            events={events ? events : []}\r\n                            step={60}\r\n                            defaultView={\r\n                                width > 768 ?\r\n                                    'month' :\r\n                                    'agenda'\r\n                            }\r\n                            defaultDate={new Date()}\r\n                            localizer={localizer}\r\n                            messages={localization}\r\n                        />\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;","import React from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport Content from '../components/layout/Content';\r\nimport Header from '../components/layout/Header';\r\nimport ListForm from '../components/list/ListForm';\r\nimport AuthService from '../services/auth.service';\r\nimport List from './List';\r\nimport Calendar from './Calendar';\r\n\r\nconst Home = () => {\r\n    const history = useHistory();\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    const onLogout = () => {\r\n        AuthService.logout();\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header email={user.email} onLogout={onLogout} />\r\n            <Content>\r\n                <Switch>\r\n                    <Route path=\"/home/calendar\">\r\n                        <Calendar />\r\n                    </Route>\r\n                    <Route path=\"/home/list\">\r\n                        <List />\r\n                    </Route>\r\n                </Switch>\r\n            </Content>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={styles.headerContainer}>\r\n            <span className={styles.brand}>\r\n                DutyCalendar\r\n            </span>\r\n            <span className={styles.desc}>\r\n                –ö–µ—Ä—É–π—Ç–µ —á–µ—Ä–≥—É–≤–∞–Ω–Ω—è–º–∏ –∑ –ª–µ–≥–∫—ñ—Å—Ç—é!\r\n            </span>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { Form, Input, Button, Alert } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styles from './AuthForm.module.css';\r\nimport AuthService from '../../services/auth.service';\r\nimport { validationMessages } from '../../helpers/intex';\r\n\r\ntype LoginData = {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nconst LoginForm = () => {\r\n    let history = useHistory();\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onFinish = async ({ email, password }: LoginData) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            await  AuthService.login(email, password);\r\n            history.push(\"/home/calendar\");\r\n        } catch {\r\n            setLoading(false);\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                error &&\r\n                <Alert message=\"–ù–µ–≤—ñ—Ä–Ω—ñ –¥–∞–Ω—ñ, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑\" type=\"error\" className={styles.loginError} showIcon />\r\n            }\r\n            <Form\r\n                name=\"login\"\r\n                className={styles.loginForm}\r\n                onFinish={onFinish}\r\n                validateMessages={validationMessages}\r\n                size=\"large\"\r\n            >\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å email'\r\n                        },\r\n                        {\r\n                            type: 'email'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å' }]}\r\n                >\r\n                    <Input.Password\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"–ü–∞—Ä–æ–ª—å\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item className={styles.submitContainer}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className={styles.loginFormButton} loading={loading}>\r\n                        –£–≤—ñ–π—Ç–∏\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { Form, Input, Button, Alert } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styles from './AuthForm.module.css';\r\nimport AuthService from '../../services/auth.service';\r\nimport { validationMessages } from '../../helpers/intex';\r\n\r\n\r\ntype User = {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nconst RegistrationForm = () => {\r\n    let history = useHistory();\r\n    const [form] = Form.useForm();\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onFinish = async ({ email, password }: User) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            await AuthService.register(email, password);\r\n            await AuthService.login(email, password);\r\n            history.push(\"/home/calendar\");\r\n        } catch {\r\n            setLoading(false);\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                error &&\r\n                <Alert message=\"–¶–µ–π email –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è\" type=\"error\" className={styles.loginError} showIcon />\r\n            }\r\n            <Form\r\n                form={form}\r\n                name=\"registration\"\r\n                className={styles.loginForm}\r\n                onFinish={onFinish}\r\n                validateMessages={validationMessages}\r\n                size=\"large\"\r\n            >\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å email'\r\n                        },\r\n                        {\r\n                            type: 'email'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å'\r\n                        },\r\n                        {\r\n                            min: 6,\r\n                            message: '–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ 6 —Å–∏–º–≤–æ–ª—ñ–≤'\r\n                        },\r\n                        {\r\n                            max: 99,\r\n                            message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ 100 —Å–∏–º–≤–æ–ª—ñ–≤'\r\n                        }\r\n                    ]}\r\n                    hasFeedback\r\n                >\r\n                    <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"–ü–∞—Ä–æ–ª—å\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"confirm\"\r\n                    dependencies={['password']}\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '–ë—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                            validator(_, value) {\r\n                                if (!value || getFieldValue('password') === value) {\r\n                                    return Promise.resolve();\r\n                                }\r\n                                return Promise.reject('–ü–∞—Ä–æ–ª—ñ –Ω–µ –∑–±—ñ–≥–∞—é—Ç—å—Å—è');\r\n                            },\r\n                        }),\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –ø–∞—Ä–æ–ª—å\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item className={styles.submitContainer}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className={styles.loginFormButton} loading={loading}>\r\n                        –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegistrationForm;","import React, { useEffect } from 'react';\r\nimport { Tabs } from 'antd';\r\nimport Header from '../components/landing/Header';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from './Landing.module.css';\r\nimport LoginForm from '../components/auth/LoginForm';\r\nimport RegistrationForm from '../components/auth/RegistrationForm';\r\nimport AuthService from '../services/auth.service';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Landing = () => {\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(AuthService.getCurrentUser()) {\r\n            history.push('/home/calendar');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.landingContainer}>\r\n            <Header />\r\n            <main className={styles.landingMain}>\r\n                <Tabs defaultActiveKey=\"1\" className={styles.authTabs} size='large'>\r\n                    <TabPane tab=\"–í—Ö—ñ–¥\" key=\"1\">\r\n                        <LoginForm />\r\n                    </TabPane>\r\n                    <TabPane tab=\"–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è\" key=\"2\">\r\n                        <RegistrationForm />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { Result } from 'antd';\r\nimport VerifyEmail from '../components/auth/VerifyEmail';\r\nimport WithAuth from '../middlewares/WithAuth';\r\nimport Home from '../pages/Home';\r\nimport Landing from '../pages/Landing';\r\n\r\nconst index = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Landing />\r\n            </Route>\r\n            <Route path=\"/email-confirmation\">\r\n                <WithAuth />\r\n            </Route>\r\n            <Route exact path=\"/verification/:code/:id\">\r\n                <VerifyEmail />\r\n            </Route>\r\n            <WithAuth>\r\n                <Route path=\"/home\">\r\n                    <Home />\r\n                </Route>\r\n            </WithAuth>\r\n            <Route to=\"*\">\r\n                <Result\r\n                    status=\"404\"\r\n                    title=\"404\"\r\n                    subTitle=\"–°—Ç–æ—Ä—ñ–Ω–∫—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!\"\r\n                />,\r\n            </Route>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default index;","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Routes from './routes';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <HashRouter>\r\n        <Routes />\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals(console.log);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"AuthForm_loginForm__3w4P1\",\"submitContainer\":\"AuthForm_submitContainer__22Q6W\",\"loginFormButton\":\"AuthForm_loginFormButton__f0w-1\",\"registerLink\":\"AuthForm_registerLink__2WszQ\",\"loginError\":\"AuthForm_loginError__3sUUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeHeader\":\"Header_homeHeader__3tVwM\",\"sideMenuButton\":\"Header_sideMenuButton__6-rHZ\",\"brand\":\"Header_brand__15Rl5\",\"user\":\"Header_user__2Yw_o\"};"],"sourceRoot":""}